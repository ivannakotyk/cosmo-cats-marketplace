/*
 * Cosmo Cats Intergalactic Marketplace API
 * REST API for managing intergalactic products in the **Cosmo Cats Marketplace**.   Includes CRUD operations, validation rules, and standardized error responses (RFC 9457). 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ProblemDetails;
import org.openapitools.client.model.ProductCreateDTO;
import org.openapitools.client.model.ProductDTO;
import org.openapitools.client.model.ProductUpdateDTO;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProductsApi
 */
@Disabled
public class ProductsApiTest {

    private final ProductsApi api = new ProductsApi();

    /**
     * Create a new product
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createProductTest() throws ApiException {
        ProductCreateDTO productCreateDTO = null;
        ProductDTO response = api.createProduct(productCreateDTO);
        // TODO: test validations
    }

    /**
     * Delete a product by ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteProductTest() throws ApiException {
        UUID id = null;
        api.deleteProduct(id);
        // TODO: test validations
    }

    /**
     * Get a product by its ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProductTest() throws ApiException {
        UUID id = null;
        ProductDTO response = api.getProduct(id);
        // TODO: test validations
    }

    /**
     * Get a list of all products
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listProductsTest() throws ApiException {
        UUID categoryId = null;
        Double minPrice = null;
        Double maxPrice = null;
        String name = null;
        List<ProductDTO> response = api.listProducts(categoryId, minPrice, maxPrice, name);
        // TODO: test validations
    }

    /**
     * Update an existing product by ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateProductTest() throws ApiException {
        UUID id = null;
        ProductUpdateDTO productUpdateDTO = null;
        ProductDTO response = api.updateProduct(id, productUpdateDTO);
        // TODO: test validations
    }

}
